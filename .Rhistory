#
# mean(mean_trip_data[mode1=="fh"]$tot_scup_catch_new)
# mean(mean_trip_data[mode1=="fh"]$tot_cat_scup_base)
#
# mean(mean_trip_data[mode1=="pr"]$tot_scup_catch_new)
# mean(mean_trip_data[mode1=="pr"]$tot_cat_scup_base)
#
# mean(mean_trip_data[mode1=="sh"]$tot_scup_catch_new)
# mean(mean_trip_data[mode1=="sh"]$tot_cat_scup_base)
#
# mean(mean_trip_data$change_CS)
# mean(mean_trip_data[mode1=="fh"]$change_CS)
# mean(mean_trip_data[mode1=="pr"]$change_CS)
# mean(mean_trip_data[mode1=="sh"]$change_CS)
#
# mean(mean_trip_data[mode1=="fh"]$cost)
# mean(mean_trip_data[mode1=="pr"]$cost)
# mean(mean_trip_data[mode1=="sh"]$cost)
# mean_trip_data1<-mean_trip_data %>% group_by(period,tripid) %>% summarise(across(everything(), mean), .groups = 'drop') %>%
#   tibble()
mean_trip_data <- mean_trip_data %>%
dplyr::select(-c("domain2")) %>% data.table::data.table() #%>% dplyr::arrange(period, tripid, catch_draw)
all_vars<-c()
all_vars <- names(mean_trip_data)[!names(mean_trip_data) %in% c( "period","tripid", "period2", "mode1", "month", "day")]
#all_vars
mean_trip_data<-mean_trip_data %>% data.table::as.data.table() #%>%
# dplyr::mutate(month = as.numeric(month),
#               day = as.numeric(day)) #%>%
mean_trip_data <- mean_trip_data %>%
.[,lapply(.SD, base::mean), by = c("tripid", "period2"), .SDcols = all_vars]
# mean(mean_trip_data$change_CS)
# mean(mean_trip_data[mode1=="pr"]$vA)
# mean(mean_trip_data[mode1=="pr"]$v0)
# mean(mean_trip_data[mode1=="sh"]$change_CS)
# mean(mean_trip_data[mode1=="fh"]$change_CS2)
# mean(mean_trip_data[mode1=="pr"]$change_CS2)
# mean(mean_trip_data[mode1=="sh"]$change_CS2)
# mean(mean_trip_data[mode1=="fh"]$tot_keep_had_base)
# mean(mean_trip_data[mode1=="fh"]$tot_keep_had_new)
#
# mean(mean_trip_data[mode1=="pr"]$tot_keep_had_base)
# mean(mean_trip_data[mode1=="pr"]$tot_keep_had_new)
#
# mean(mean_trip_data[mode1=="sh"]$tot_keep_had_base)
# mean(mean_trip_data[mode1=="sh"]$tot_keep_had_new)
#
# mean(mean_trip_data[mode1=="fh"]$tot_keep_cod_base)
# mean(mean_trip_data[mode1=="fh"]$tot_keep_cod_new)
#
# mean(mean_trip_data[mode1=="pr"]$tot_keep_cod_base)
# mean(mean_trip_data[mode1=="pr"]$tot_keep_cod_new)
#
# mean(mean_trip_data[mode1=="sh"]$tot_keep_cod_base)
# mean(mean_trip_data[mode1=="sh"]$tot_keep_cod_new)
#
# max(mean_trip_data[mode1=="sh"]$tot_keep_cod_base)
# max(mean_trip_data[mode1=="sh"]$tot_keep_cod_new)
#
#
#
# mean(mean_trip_data[mode1=="fh"]$tot_cat_cod_new)
# mean(mean_trip_data[mode1=="fh"]$tot_cat_cod_base)
#
# mean(mean_trip_data[mode1=="pr"]$tot_cat_cod_new)
# mean(mean_trip_data[mode1=="pr"]$tot_cat_cod_base)
#
# mean(mean_trip_data[mode1=="sh"]$tot_cat_cod_new)
# mean(mean_trip_data[mode1=="sh"]$tot_cat_cod_base)
#
#
# mean(mean_trip_data[mode1=="fh"]$tot_scup_catch_new)
# mean(mean_trip_data[mode1=="fh"]$tot_cat_scup_base)
#
# mean(mean_trip_data[mode1=="pr"]$tot_scup_catch_new)
# mean(mean_trip_data[mode1=="pr"]$tot_cat_scup_base)
#
# mean(mean_trip_data[mode1=="sh"]$tot_scup_catch_new)
# mean(mean_trip_data[mode1=="sh"]$tot_cat_scup_base)
#
# mean(mean_trip_data$change_CS)
# mean(mean_trip_data[mode1=="fh"]$change_CS)
# mean(mean_trip_data[mode1=="pr"]$change_CS)
# mean(mean_trip_data[mode1=="sh"]$change_CS)
#
#
#
#
#
# Get rid of things we don't need.
mean_trip_data <- subset(mean_trip_data, alt==1,select=-c(alt, cost,
catch_draw, expon_v0 ,v0_col_sum, expon_vA,
opt_out, v0, v0_optout, vA, vA_optout, vA_col_sum))
mean_trip_data<-mean_trip_data %>%
dplyr::mutate(tot_had_catch_new=tot_keep_had_new+tot_rel_had_new,
tot_cod_catch_new=tot_keep_cod_new+tot_rel_cod_new)
# Multiply the average trip probability by each of the catch variables to get probability-weighted catch
list_names <- c("tot_keep_cod_new","tot_rel_cod_new", "tot_cod_catch_new",
"tot_keep_had_new", "tot_rel_had_new" , "tot_had_catch_new"  )
mean_trip_data <- mean_trip_data %>% ## ADD mean_kr_total for each species by tripid and perdiod2
data.table::as.data.table() #%>%
mean_trip_data[is.na(mean_trip_data)] <- 0
mean_trip_data<-mean_trip_data %>%
.[,as.vector(list_names) := lapply(.SD, function(x) x * as.numeric(probA)), .SDcols = list_names] %>%
.[]
#########
# Take mean of catch_draw for length
all_vars<-c()
all_vars <- names(length_data)[!names(length_data) %in% c("period2","tripid", "catch_draw" )]
length_data<- length_data %>%
data.table::data.table() %>%
.[,lapply(.SD, base::mean), by = c("period2","tripid"), .SDcols = all_vars]
length_data[is.na(length_data)] <- 0
# length_data<- length_data %>%
#   tidyr::separate(period2, into = c("month", "day", "mode"), sep = "-") %>%
#   dplyr::mutate(month = as.numeric(month),
#                 day = as.numeric(day),
#                 period2 = paste0(month, "_", day, "_", mode)) %>%
#   dplyr::select(!c(month, day, mode))
length_data2<- mean_trip_data %>%
dplyr::select(period2, tripid, probA) %>%
dplyr::full_join(length_data, by = c("period2", "tripid")) #%>%
length_data2[is.na(length_data2)] <- 0
all_vars<-c()
all_vars <- names(length_data2)[!names(length_data2) %in% c("period2","tripid", "mode1", "probA" )]
length_data3 <- length_data2 %>% ## ADD mean_kr_total for each species by tripid and perdiod2
data.table::as.data.table()  %>%
.[,as.vector(all_vars) := lapply(.SD, function(x) x * as.numeric(probA)), .SDcols = all_vars] %>%
.[]
#Add tot_keep_scup base and tot_rel_scup_base here:
list_names <- c("tot_keep_cod_base","tot_rel_cod_base", "tot_keep_had_base", "tot_rel_had_base")
mean_trip_data <- mean_trip_data %>%
data.table::as.data.table() %>%
.[,as.vector(list_names) := lapply(.SD, function(x) x * prob0), .SDcols = list_names] %>%
.[]
mean_trip_data<- mean_trip_data %>%
dplyr::select(unique(colnames(mean_trip_data)))
mean_trip_data <- mean_trip_data%>%
dplyr::mutate( n_choice_occasions_alt = rep(1,nrow(.)))
#Now multiply the trip outcomes (catch, trip probabilities) for each choice occasion in
#mean_trip_pool by the expansion factor (expand), so that  each choice occasion represents a certain number of choice occasions
sims <- calibration_data %>%
dplyr::select(c(n_choice_occasions, period2)) %>%
# dplyr::mutate_at(.vars = "period2", .funs = gsub,
#                  pattern = "_", replace = "-") %>%
dplyr::left_join(mean_trip_data, by = c("period2")) %>%
#dplyr::select()
dplyr::mutate(ndraws = c(50)) %>%
#               period = as.character(period2)) %>%
tidyr::separate(period2, into = c("month", "day", "mode")) %>%
dplyr::mutate(month = as.numeric(month)) %>%
# ## Here we adjust the number of choice occasions to simulate to account for
## different kind-of-days within a month in 2024 compared to 2022
dplyr::left_join(calendar_2024_adjust, by=c("month", "mode")) %>%
dplyr::filter(!tripid == "NA", !expansion_factor == "NA") %>%
#multiply the number of choice occasions in the baseline year by the expansion factor
#For Kim: When we run the projections for 2024, change the "n_choice_occasions*1" below to "n_choice_occasions*expansion_factor" - I already did this
dplyr::mutate(n_choice_occasions = n_choice_occasions*expansion_factor) %>%
dplyr::mutate(expand = n_choice_occasions/ndraws) %>%
dplyr::mutate(period2 = paste0(month, "_", day, "_", mode)) %>%
dplyr::arrange(period2)
### Keep all sp_length_mode columns and multiple by expand outside function -
##### Should be same number of rows - merge on (period2, tripid)
length_expand <- sims %>%
dplyr::select(period2, tripid, expand) %>%
dplyr::left_join(length_data3, by = c("period2", "tripid")) %>%
dplyr::select(-probA)
all_vars<-c()
all_vars <- names(length_expand)[!names(length_expand) %in% c("period2", "tripid", "expand")]
#
# ## Move to outside function
length_expand <- length_expand %>%
data.table::as.data.table() %>%
.[,as.vector(all_vars) := lapply(.SD, function(x) x * as.numeric(expand)), .SDcols = all_vars] %>%
.[]
period_conversion <- period_conversion %>%
dplyr::select(period2) %>%
tidyr::separate(period2, into = c("month", "day", "mode"), sep = "-") %>%
dplyr::mutate(day = as.numeric(day),
month = as.numeric(month),
period2 = paste0(month, "_", day, "_", mode)) %>%
dplyr::select(period2, month, mode)
length_expanded<- length_expand %>%
#dplyr::select(period2, mode, month) %>%
dplyr::left_join(period_conversion, by = c("period2")) %>%
data.table::data.table()
all_vars<-c()
all_vars <- names(length_expanded)[!names(length_expanded) %in% c("period2", "mode", "tripid", "expand", "month")]
length_expanded <- length_expanded %>%
data.table::as.data.table() %>%
.[,lapply(.SD, base::sum), by = c("mode", "month"), .SDcols = all_vars]
length_expanded_check<- length_expanded %>%
tidyr::pivot_longer(cols = !month & !mode,  names_to = "Var", values_to = "Number_at_Length")
#This code translates numbers to weights using the l-w equation. The number_weight var is set to "Weight"
#Later on we drop the keep and release numbers computed here.
length_weight<- length_expanded %>%
tidyr::pivot_longer(cols = !month & !mode,  names_to = "Var", values_to = "Number_at_Length") %>%
tidyr::separate(Var, into = c("keep_release", "Species", "length"), sep = "_") %>%
dplyr::rename(Month=month, Mode=mode) %>%
#dplyr::left_join(l_w_conversion, by = c( "Month", "Species")) %>%
dplyr::mutate(length_in = as.numeric(length),
length_cm = length_in*2.54)  %>%  #Convert to cm
dplyr::mutate(weight = dplyr::case_when(Species == "cod" ~ cod_lw_a*length_cm^cod_lw_b),
weight = dplyr::case_when(Species == "had" ~ had_lw_a*length_cm^had_lw_b, TRUE ~ weight),
weight = weight*2.20462262185, #convert to lbs
Total_weight = Number_at_Length * weight) %>%
dplyr::mutate(spp2 = dplyr::case_when(Species == "had" & length_cm >  50 ~ "had_lg",TRUE~ Species),
spp2 = dplyr::case_when(Species == "had" & length_cm <=  50 ~ "had_sm", TRUE~spp2)) %>%
dplyr::left_join(Disc_mort, by = c("Month", "spp2")) %>%
dplyr::mutate(Discmortality_Total_weight = Discard_mortality * Number_at_Length * weight,
Discmortality_Total_Number = Discard_mortality * Number_at_Length) %>%
dplyr::group_by( Species, Mode, keep_release) %>%
dplyr::summarise(Total_Number = sum(Number_at_Length),
Total_Weight = sum(Total_weight),
Discmortality_Total_Weight = sum(Discmortality_Total_weight),
Discmortality_Total_Number = sum(Discmortality_Total_Number),.groups = 'drop') %>%
dplyr::rename(mode1 = Mode) %>%
dplyr::ungroup()
l_w_mode <- length_weight %>%
dplyr::mutate(Var1 = paste0(Species, "_", mode1, "_", keep_release)) %>%
dplyr::select(Var1, Total_Number, Total_Weight, Discmortality_Total_Weight, Discmortality_Total_Number) %>%
tidyr::pivot_longer(!Var1, names_to = "Var", values_to = "Value") %>%
dplyr::mutate(Var = paste0(Var1,"_",Var)) %>%
dplyr::select(!Var1) %>%
dplyr::filter(is.na(Value)==FALSE)
l_w_mode <- data.frame(lapply(l_w_mode, function(x) {
gsub("release_Discmortality", "Discmortality", x)
}))
l_w_sum <- length_weight %>%
dplyr::group_by( Species, keep_release) %>%
dplyr::summarise(Total_Number = sum(Total_Number),
Total_Weight = sum(Total_Weight),
Discmortality_Total_Weight = sum(Discmortality_Total_Weight),
Discmortality_Total_Number = sum(Discmortality_Total_Number), .groups = 'drop') %>%
dplyr::ungroup() %>%
dplyr::mutate(mode1="all") %>%
dplyr::mutate(Var1 = paste0(Species, "_",mode1, "_", keep_release)) %>%
dplyr::select(Var1, Total_Number, Total_Weight, Discmortality_Total_Weight, Discmortality_Total_Number) %>%
tidyr::pivot_longer(!Var1, names_to = "Var", values_to = "Value") %>%
dplyr::mutate(Var = paste0(Var1,"_",Var)) %>%
dplyr::select(!Var1) %>%
dplyr::filter(is.na(Value)==FALSE)
l_w_sum <- data.frame(lapply(l_w_sum, function(x) {
gsub("release_Discmortality", "Discmortality", x)
}))
trip_level_output <- sims %>%
dplyr::select(c(period2,  n_choice_occasions, tripid, expand, change_CS, CS_base, CS_alt,  probA, prob0,
tot_keep_cod_new, tot_rel_cod_new, tot_keep_had_new, tot_rel_had_new,
tot_keep_cod_base, tot_rel_cod_base, tot_keep_had_base,tot_rel_had_base)) %>%
as.data.frame()
prediction_output_by_period1 <- period_conversion %>%
dplyr::select(period2, month, mode) %>%
dplyr::right_join(trip_level_output, by = c("period2"))
#Metrics at the choice occasion level
prediction_output_by_period2 <- prediction_output_by_period1 %>%
#prediction_output_by_period2 <- trip_level_output %>%
data.table::as.data.table() %>%
.[, cv_sum := expand*change_CS] %>%
.[, cs_base_sum := expand*CS_base] %>%
.[, cs_alt_sum := expand*CS_alt] %>%
.[, cod_keep_sum := expand*tot_keep_cod_new] %>%
.[, cod_rel_sum := expand*tot_rel_cod_new] %>%
.[, had_keep_sum := expand*tot_keep_had_new] %>%
.[, had_rel_sum := expand*tot_rel_had_new] %>%
.[, cod_keep_base_sum := expand*tot_keep_cod_base] %>%
.[, cod_rel_base_sum := expand*tot_rel_cod_base] %>%
.[, had_keep_base_sum := expand*tot_keep_had_base] %>%
.[, had_rel_base_sum := expand*tot_rel_had_new] %>%
.[, ntrips_alt := expand*probA] %>%
.[mode=="pr", cv_sum_pr := expand*change_CS] %>%
.[mode=="fh", cv_sum_fh := expand*change_CS] %>%
.[mode=="sh", cv_sum_sh := expand*change_CS] %>%
.[mode=="pr", cs_base_pr := expand*CS_base] %>%
.[mode=="fh", cs_base_fh := expand*CS_base] %>%
.[mode=="sh", cs_base_sh := expand*CS_base] %>%
.[mode=="pr", cs_alt_pr := expand*CS_alt] %>%
.[mode=="fh", cs_alt_fh := expand*CS_alt] %>%
.[mode=="sh", cs_alt_sh := expand*CS_alt] %>%
.[mode=="pr", cod_keep_sum_pr := expand*tot_keep_cod_new] %>%
.[mode=="fh", cod_keep_sum_fh := expand*tot_keep_cod_new] %>%
.[mode=="sh", cod_keep_sum_sh := expand*tot_keep_cod_new] %>%
.[mode=="pr", cod_rel_sum_pr := expand*tot_rel_cod_new] %>%
.[mode=="fh", cod_rel_sum_fh := expand*tot_rel_cod_new] %>%
.[mode=="sh", cod_rel_sum_sh := expand*tot_rel_cod_new] %>%
.[mode=="pr", had_keep_sum_pr := expand*tot_keep_had_new] %>%
.[mode=="fh", had_keep_sum_fh := expand*tot_keep_had_new] %>%
.[mode=="sh", had_keep_sum_sh := expand*tot_keep_had_new] %>%
.[mode=="pr", had_rel_sum_pr := expand*tot_rel_had_new] %>%
.[mode=="fh", had_rel_sum_fh := expand*tot_rel_had_new] %>%
.[mode=="sh", had_rel_sum_sh := expand*tot_rel_had_new] %>%
.[mode=="pr", ntrips_pr := expand*probA] %>%
.[mode=="fh", ntrips_fh := expand*probA] %>%
.[mode=="sh", ntrips_sh := expand*probA]
# ####Here we compute total harvest weight based on MRIP average weights
# if (state1 %in% c("MA", "RI", "CT", "NY", "DE", "MD", "VA", "NC")){
#
# prediction_output_by_period_check0 <- prediction_output_by_period2 %>%
#   dplyr::mutate_if(is.numeric, tidyr::replace_na, replace = 0) %>%
#   dplyr::group_by(mode1) %>%
#   dplyr::summarise(cod_keep_sum_num = sum(cod_keep_sum),
#                     cod_rel_sum_num = sum(cod_rel_sum),
#                     had_keep_sum_num = sum(had_keep_sum),
#                     had_rel_sum_num = sum(had_rel_sum),
#                     scup_keep_sum_num = sum(scup_keep_sum),
#                     scup_rel_sum_num = sum(scup_rel_sum),
#                     cod_keep_base_sum_num = sum(cod_keep_base_sum),
#                     cod_rel_base_sum_num = sum(cod_rel_base_sum),
#                     had_keep_base_sum_num = sum(had_keep_base_sum),
#                     had_rel_base_sum_num = sum(had_rel_base_sum)) %>%
#                     #scup_tot_cat_base_sum = sum(scup_tot_cat_base_sum)) %>%
#   dplyr::ungroup() %>%
#   dplyr::mutate(cod_Discmortality_sum_num = cod_rel_sum_num*.1,
#                 had_Discmortality_sum_num = had_rel_sum_num*.15,
#                 scup_Discmortality_sum_num = scup_rel_sum_num*.15,
#                 cod_Discmortality_sum_weightavg = cod_Discmortality_sum_num*avg_lbs_release_cod,
#                 had_Discmortality_sum_weightavg = had_Discmortality_sum_num*avg_lbs_release_had,
#                 scup_Discmortality_sum_weightavg = scup_Discmortality_sum_num*avg_lbs_release_scup) %>%
#   dplyr::left_join(MRIP_harvest_weights, by=c("mode1")) %>%
#   dplyr::mutate(cod_keep_sum_weightavg= cod_keep_sum_num*mean_weightcod,
#                 had_keep_sum_weightavg= had_keep_sum_num*mean_weighthad,
#                 scup_keep_sum_weightavg= scup_keep_sum_num*mean_weightSCUP,
#                 cod_release_sum_weightavg= cod_rel_sum_num*avg_lbs_release_cod,
#                 had_release_sum_weightavg= had_rel_sum_num*avg_lbs_release_had,
#                 scup_release_sum_weightavg= scup_rel_sum_num*avg_lbs_release_scup) %>%
#   dplyr::select(mode1, had_keep_sum_num, had_keep_sum_weightavg, had_rel_sum_num,
#                 scup_keep_sum_num, scup_keep_sum_weightavg, scup_rel_sum_num,
#                 cod_keep_sum_num, cod_keep_sum_weightavg, cod_rel_sum_num,
#                 cod_Discmortality_sum_num, had_Discmortality_sum_num, scup_Discmortality_sum_num,
#                 cod_release_sum_weightavg,had_release_sum_weightavg,scup_release_sum_weightavg,
#                 scup_Discmortality_sum_weightavg, had_Discmortality_sum_weightavg, cod_Discmortality_sum_weightavg) #%>%
# }
#
#
#
#
#
# if (state1 %in% c("NJ")){
#
#   prediction_output_by_period_check0 <- prediction_output_by_period2 %>%
#     dplyr::mutate_if(is.numeric, tidyr::replace_na, replace = 0) %>%
#     dplyr::group_by(mode1) %>%
#     dplyr::summarise(cod_keep_sum_num = sum(cod_keep_sum),
#                      cod_rel_sum_num = sum(cod_rel_sum),
#                      had_keep_sum_num = sum(had_keep_sum),
#                      had_rel_sum_num = sum(had_rel_sum),
#                      scup_keep_sum_num = sum(scup_keep_sum),
#                      scup_rel_sum_num = sum(scup_rel_sum),
#                      cod_keep_base_sum_num = sum(cod_keep_base_sum),
#                      cod_rel_base_sum_num = sum(cod_rel_base_sum),
#                      had_keep_base_sum_num = sum(had_keep_base_sum),
#                      had_rel_base_sum_num = sum(had_rel_base_sum)) %>%
#     #scup_tot_cat_base_sum = sum(scup_tot_cat_base_sum)) %>%
#     dplyr::ungroup() %>%
#     dplyr::left_join(NJ_bias_catch1, by="mode1") %>%
#     dplyr::mutate(cod_keep_sum_num=cod_keep_sum_num+diff_cod_keep,
#                   had_keep_sum_num=had_keep_sum_num+diff_had_keep,
#                   scup_keep_sum_num=scup_keep_sum_num+diff_scup_keep,
#                   cod_rel_sum_num=cod_rel_sum_num+diff_cod_rel,
#                   had_rel_sum_num=had_rel_sum_num+diff_had_rel,
#                   scup_rel_sum_num=scup_rel_sum_num+diff_scup_rel) %>%
#     dplyr::mutate(cod_Discmortality_sum_num = cod_rel_sum_num*.1,
#                   had_Discmortality_sum_num = had_rel_sum_num*.15,
#                   scup_Discmortality_sum_num = scup_rel_sum_num*.15,
#                   cod_Discmortality_sum_weightavg = cod_Discmortality_sum_num*avg_lbs_release_cod,
#                   had_Discmortality_sum_weightavg = had_Discmortality_sum_num*avg_lbs_release_had,
#                   scup_Discmortality_sum_weightavg = scup_Discmortality_sum_num*avg_lbs_release_scup) %>%
#     dplyr::left_join(MRIP_harvest_weights, by=c("mode1")) %>%
#     dplyr::mutate(cod_keep_sum_weightavg= cod_keep_sum_num*mean_weightcod,
#                   had_keep_sum_weightavg= had_keep_sum_num*mean_weighthad,
#                   scup_keep_sum_weightavg= scup_keep_sum_num*mean_weightSCUP,
#                   cod_release_sum_weightavg= cod_rel_sum_num*avg_lbs_release_cod,
#                   had_release_sum_weightavg= had_rel_sum_num*avg_lbs_release_had,
#                   scup_release_sum_weightavg= scup_rel_sum_num*avg_lbs_release_scup) %>%
#     dplyr::select(mode1, had_keep_sum_num, had_keep_sum_weightavg, had_rel_sum_num,
#                   scup_keep_sum_num, scup_keep_sum_weightavg, scup_rel_sum_num,
#                   cod_keep_sum_num, cod_keep_sum_weightavg, cod_rel_sum_num,
#                   cod_Discmortality_sum_num, had_Discmortality_sum_num, scup_Discmortality_sum_num,
#                   cod_release_sum_weightavg,had_release_sum_weightavg,scup_release_sum_weightavg,
#                   scup_Discmortality_sum_weightavg, had_Discmortality_sum_weightavg, cod_Discmortality_sum_weightavg) #%>%
# }
#
# #prediction_output_by_period_check01 contains keep, release,discard mortality numbers, and keep weights
# #based on MRIP average weights by mode. The number_weight var is set to "Weight"
# prediction_output_by_period_check01<- prediction_output_by_period_check0 %>%
#   tidyr::pivot_longer(!mode1, names_to = "Var", values_to = "Value") %>%
#   dplyr::rename(mode=mode1) %>%
#   tidyr::separate(Var, into = c("Category", "keep_release", "param", "number_weight")) %>%
#   dplyr::mutate(param="Total") %>%
#   dplyr::mutate(number_weight=dplyr::case_when(number_weight=="num"~"Number", TRUE~number_weight)) %>%
#   dplyr::mutate(number_weight=dplyr::case_when(number_weight=="weightavg"~"Weight_avg", TRUE~number_weight)) %>%
#   dplyr::mutate(state = state1) %>%
#   replace(is.na(.), 0)
#
# #prediction_output_by_period_check02 contains keep, release,discard mortality numbers, and keep weights
# #based on MRIP average weights across all modes. The number_weight var is set to "Weight"
# prediction_output_by_period_check02<- prediction_output_by_period_check01 %>%
#   dplyr::group_by(Category, keep_release, param, number_weight) %>%
#   dplyr::summarise(Value = sum(Value), .groups = "drop") %>%
#   dplyr::ungroup() %>%
#   dplyr::mutate(state = state1, mode="all")
#
#
#
#prediction_output_by_period1 contains CV and ntrips estimates by mode
#CV and trip estimates - all states besides NJ
prediction_output_by_period1 <- prediction_output_by_period2 %>%
dplyr::mutate_if(is.numeric, tidyr::replace_na, replace = 0) %>%
dplyr::group_by(mode) %>%
dplyr::summarise(CV = sum(cv_sum),
ntrips = sum(ntrips_alt)) %>%
dplyr::ungroup()
#prediction_mode contains CV and ntrips estimates by mode
prediction_mode<- prediction_output_by_period1 %>%
tidyr::pivot_longer(!mode, names_to = "Var", values_to = "Value") %>%
dplyr::mutate(Var = paste0(Var, "_", mode)) %>%
dplyr::select(!mode)
#prediction_all_mode contains CV and ntrips estimates across all modes
prediction_all_mode<- prediction_output_by_period1  %>%
dplyr::summarise(CV= sum(CV),
ntrips = sum(ntrips)) %>%
dplyr::mutate(mode="all") %>%
tidyr::pivot_longer(!mode, names_to = "Var", values_to = "Value") %>%
dplyr::mutate(Var = paste0(Var, "_", mode)) %>%
dplyr::select(!mode)
#Now we combine all the data into one file
predictions <- rbind(prediction_mode, prediction_all_mode, l_w_mode, l_w_sum) %>%
tidyr::separate(Var, into = c("Category", "mode", "keep_release", "param", "number_weight")) %>%
#run_number = x
dplyr::filter(!Value == "NA") %>%
dplyr::mutate(number_weight=dplyr::case_when(is.na(number_weight) & Category=="CV"~"Dollars",TRUE ~ number_weight)) %>%
dplyr::mutate(number_weight=dplyr::case_when(is.na(number_weight) & Category=="ntrips"~"Ntrips",TRUE ~ number_weight),
season = select_season, run = x)
#dplyr::filter(!param == "Discmortality") %>%
#dplyr::select(!param)
#remove from this data keep numbers, release numbers, discard mortality numbers from the length-weight equation data,
#}
return(predictions)
}
for(k in 1:2){
for(i in 0:1){
predictions<- predict_rec_catch_season(
x = k, select_season = i,
calibration_data_table =  readr::read_rds(file.path(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration/pds_new_all_", i, "_", k, ".rds"))),
directed_trips_table =  read.csv("C:/Users/kimberly.bastille/Desktop/codhad_data/directed_trips/directed_trips_calib_150draws.csv"),
size_data_read = read.csv("C:/Users/kimberly.bastille/Desktop/codhad_data/projected_CaL_cod_hadd_open_season_test.csv"),
costs_new_all =  readr::read_rds(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration/cost_new_all_",i, "_", k, ".rds")),
catch_data_all = read.csv(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/catch_draws/catch_draws", k, ".csv")),
#l_w_conversion =
n_drawz = 50, n_catch_draws = 30, eff_seed=130
)
# predictions2<- predictions %>%
#   dplyr::mutate(run = k,
#                 month = i) %>%
#   dplyr::group_by(Category,mode,keep_release,param,number_weight, run) %>%
#   dplyr::summarise(Value = sum(as.numeric(Value))) %>%
#   dplyr::ungroup()
predictions_out <- predictions_out %>% rbind(predictions)
}
}
for(i in 0:1){
predictions<- predict_rec_catch_season(
x = k, select_season = i,
calibration_data_table =  readr::read_rds(file.path(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration/pds_new_all_", i, "_", k, ".rds"))),
directed_trips_table =  read.csv("C:/Users/kimberly.bastille/Desktop/codhad_data/directed_trips/directed_trips_calib_150draws.csv"),
size_data_read = read.csv("C:/Users/kimberly.bastille/Desktop/codhad_data/projected_CaL_cod_hadd_open_season_test.csv"),
costs_new_all =  readr::read_rds(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration/cost_new_all_",i, "_", k, ".rds")),
catch_data_all = read.csv(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/catch_draws/catch_draws", k, ".csv")),
#l_w_conversion =
n_drawz = 50, n_catch_draws = 30, eff_seed=130
)
# predictions2<- predictions %>%
#   dplyr::mutate(run = k,
#                 month = i) %>%
#   dplyr::group_by(Category,mode,keep_release,param,number_weight, run) %>%
#   dplyr::summarise(Value = sum(as.numeric(Value))) %>%
#   dplyr::ungroup()
predictions_out <- predictions_out %>% rbind(predictions)
}
for(k in 1:2){
for(i in 0:1){
predictions<- predict_rec_catch_season(
x = k, select_season = i,
calibration_data_table =  readr::read_rds(file.path(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration/pds_new_all_", i, "_", k, ".rds"))),
directed_trips_table =  read.csv("C:/Users/kimberly.bastille/Desktop/codhad_data/directed_trips/directed_trips_calib_150draws.csv"),
size_data_read = read.csv("C:/Users/kimberly.bastille/Desktop/codhad_data/projected_CaL_cod_hadd_open_season_test.csv"),
costs_new_all =  readr::read_rds(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration/cost_new_all_",i, "_", k, ".rds")),
catch_data_all = read.csv(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/catch_draws/catch_draws", k, ".csv")),
#l_w_conversion =
n_drawz = 50, n_catch_draws = 30, eff_seed=130
)
# predictions2<- predictions %>%
#   dplyr::mutate(run = k,
#                 month = i) %>%
#   dplyr::group_by(Category,mode,keep_release,param,number_weight, run) %>%
#   dplyr::summarise(Value = sum(as.numeric(Value))) %>%
#   dplyr::ungroup()
predictions_out <- predictions_out %>% rbind(predictions)
}
}
library(magrittr)
k = 1
select_season = 1
calibration_data_table =  readr::read_rds(file.path(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration/pds_new_all_", select_season, "_", k, ".rds")))
directed_trips_table =  read.csv("C:/Users/kimberly.bastille/Desktop/codhad_data/directed_trips/directed_trips_calib_150draws.csv")
size_data_read = read.csv("C:/Users/kimberly.bastille/Desktop/codhad_data/projected_CaL_cod_hadd_open_season_test.csv")
costs_new_all =  readr::read_rds(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration/cost_new_all_",select_season, "_", k, ".rds"))
catch_data_all = read.csv(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/catch_draws/catch_draws", k, ".csv"))
#l_w_conversion =
n_drawz = 50
n_catch_draws = 30
eff_seed=130
open
library(magrittr)
