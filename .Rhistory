write.csv(dat, file = paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/catch_draws/catch_draw_", draw, ".csv"))
dat = feather::read_feather(file.path(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/catch_draws/", catch[64])))
draw <- unique(dat$draw)
write.csv(dat, file = paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/catch_draws/catch_draw_", draw, ".csv"))
dat = feather::read_feather(file.path(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/catch_draws/", catch[75])))
draw <- unique(dat$draw)
write.csv(dat, file = paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/catch_draws/catch_draw_", draw, ".csv"))
length(catch)
catch[96]
catch<- list.files(path = "C:/Users/kimberly.bastille/Desktop/codhad_data/catch_draws", pattern = "catch_draws_pro")
catch[69]
catch[12]
catch[6]
catch[2]
catch[3]
dat = feather::read_feather(file.path(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/catch_draws/", catch[2])))
draw <- unique(dat$draw)
write.csv(dat, file = paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/catch_draws/catch_draw_", draw, ".csv"))
dat = feather::read_feather(file.path(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/catch_draws/", catch[3])))
draw <- unique(dat$draw)
write.csv(dat, file = paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/catch_draws/catch_draw_", draw, ".csv"))
catch[11]
catch[10]
catch[8]
catch[9]
catch<- list.files(path = "C:/Users/kimberly.bastille/Desktop/codhad_data/catch_draws", pattern = "catch_draws_pro")
catch[9]
dat = feather::read_feather(file.path(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/catch_draws/", catch[9])))
draw <- unique(dat$draw)
write.csv(dat, file = paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/catch_draws/catch_draw_", draw, ".csv"))
dat = feather::read_feather(file.path(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/catch_draws/", catch[10])))
draw <- unique(dat$draw)
write.csv(dat, file = paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/catch_draws/catch_draw_", draw, ".csv"))
cost<- list.files(path = "C:/Users/kimberly.bastille/Desktop/codhad_data/calibration", pattern = "costs_")
for(i in 1:length(cost)){
dat = feather::read_feather(file.path(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration/", cost[i])))
draw <- unique(dat$n_cal_draw)
mode <- unique(dat$mode)
season <- unique(dat$open)
write.csv(dat, file = paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration/costs", draw, "_", mode, "_", season, ".csv"))
}
costs[400]
cost[400]
cost[300]
i = 300
dat = feather::read_feather(file.path(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration/", cost[i])))
unique(dat$n_cal_draw)
dat = feather::read_feather(file.path(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration/", cost[250])))
dat = feather::read_feather(file.path(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration/", cost[251])))
for(i in 250:length(cost)){
dat = feather::read_feather(file.path(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration/", cost[i])))
draw <- unique(dat$n_cal_draw)
mode <- unique(dat$mode)
season <- unique(dat$open)
write.csv(dat, file = paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration/costs", draw, "_", mode, "_", season, ".csv"))
}
for(i in 256:length(cost)){
dat = feather::read_feather(file.path(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration/", cost[i])))
draw <- unique(dat$n_cal_draw)
mode <- unique(dat$mode)
season <- unique(dat$open)
write.csv(dat, file = paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration/costs", draw, "_", mode, "_", season, ".csv"))
}
for(i in 300:length(cost)){
dat = feather::read_feather(file.path(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration/", cost[i])))
draw <- unique(dat$n_cal_draw)
mode <- unique(dat$mode)
season <- unique(dat$open)
write.csv(dat, file = paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration/costs", draw, "_", mode, "_", season, ".csv"))
}
cost<- list.files(path = "C:/Users/kimberly.bastille/Desktop/codhad_data/calibration", pattern = "costs_")
for(i in 1:length(cost)){
dat = feather::read_feather(file.path(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration/", cost[i])))
draw <- unique(dat$n_cal_draw)
mode <- unique(dat$mode)
season <- unique(dat$open)
write.csv(dat, file = paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration/costs", draw, "_", mode, "_", season, ".csv"))
}
cost<- list.files(path = "C:/Users/kimberly.bastille/Desktop/codhad_data/calibration", pattern = "costs_")
for(i in 1:length(cost)){
dat = feather::read_feather(file.path(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration/", cost[i])))
draw <- unique(dat$n_cal_draw)
mode <- unique(dat$mode)
season <- unique(dat$open)
write.csv(dat, file = paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration/costs", draw, "_", mode, "_", season, ".csv"))
}
for(i in 192:length(cost)){
dat = feather::read_feather(file.path(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration/", cost[i])))
draw <- unique(dat$n_cal_draw)
mode <- unique(dat$mode)
season <- unique(dat$open)
write.csv(dat, file = paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration/costs", draw, "_", mode, "_", season, ".csv"))
}
i = 191
dat = feather::read_feather(file.path(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration/", cost[i])))
library(magrittr)
i = 190
dat = feather::read_feather(file.path(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration/", cost[i])))
cost<- list.files(path = "C:/Users/kimberly.bastille/Desktop/codhad_data/calibration", pattern = "costs_")
dat = feather::read_feather(file.path(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration/", cost[i])))
unique(dat$n_cal_draw)
i = 30
dat = feather::read_feather(file.path(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration/", cost[i])))
unique(dat$n_cal_draw)
i = 20
dat = feather::read_feather(file.path(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration/", cost[i])))
unique(dat$n_cal_draw)
i = 1
dat = feather::read_feather(file.path(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration/", cost[i])))
unique(dat$n_cal_draw)
i = 12
dat = feather::read_feather(file.path(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration/", cost[i])))
unique(dat$n_cal_draw)
for(i in 1:length(cost)){
dat = feather::read_feather(file.path(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration/", cost[i])))
draw <- unique(dat$n_cal_draw)
mode <- unique(dat$mode)
season <- unique(dat$open)
write.csv(dat, file = paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration/costs", draw, "_", mode, "_", season, ".csv"))
}
cost
i = 2
dat = feather::read_feather(file.path(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration/", cost[i])))
dat = feather::read_feather(file.path(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration/", cost[i])))
memory.limit()
memory.size(max=10000000)
utils::memory.limit()
invisible(utils::memory.limit(size = 6000000))
dat = feather::read_feather(file.path(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration/", cost[i])))
cost<- list.files(path = "C:/Users/kimberly.bastille/Desktop/codhad_data/calibration", pattern = "costs_")
for(i in 1:length(cost)){
dat = feather::read_feather(file.path(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration/", cost[i])))
draw <- unique(dat$n_cal_draw)
mode <- unique(dat$mode)
season <- unique(dat$open)
write.csv(dat, file = paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration/costs", draw, "_", mode, "_", season, ".csv"))
}
library(magrittr)
x = 1
select_season = 1
calibration_data_table = read.csv(file.path(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration/pds", x, ".csv")))
directed_trips_table =  read.csv("C:/Users/kimberly.bastille/Desktop/codhad_data/directed_trips/directed_trips_calib_150draws.csv")
size_data_read = read.csv("C:/Users/kimberly.bastille/Desktop/codhad_data/projected_CaL_cod_hadd_open_season_test.csv")
costs_fh =  read.csv(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration/cost",x, "_fh_", select_season,".csv"))
costs_fh =  read.csv(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration/costs",x, "_fh_", select_season,".csv"))
costs_sh =  read.csv(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration/costs",x, "_sh_", select_season,".csv"))
costs_pr =  read.csv(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration/costs",x, "_pr_", select_season,".csv"))
catch_data_all = read.csv(paste0("C:/Users/kimberly.bastille/Desktop/codhad_data/catch_draws/catch_draw_", x, ".csv"))
#l_w_conversion =
n_drawz = 50
n_catch_draws = 30
eff_seed=130
###################
cod_lw_a = 0.000005132
cod_lw_b = 3.1625
had_lw_a = 0.000009298
had_lw_b = 3.0205
if(select_season == 1){
seas = "open"
}
if(select_season == 0){
seas = "closed"
}
calendar_2024_adjust <- readr::read_csv("C:/Users/kimberly.bastille/Desktop/codhad_data/next year calendar adjustments.csv", show_col_types = FALSE) %>%
dplyr::filter(draw == x)
Disc_mort<- readr::read_csv("C:/Users/kimberly.bastille/Desktop/codhad_data/Discard_Mortality.csv", show_col_types = FALSE)
length_expanded1=list()
prediction_output_by_period_check = list()
prediction_output_by_period3 = list()
discard_stats1=list()
predictions_test=list()
print("made it through data read in ")
period_conversion<- directed_trips_table %>%tibble::tibble() %>%
dplyr::filter(draw == x) %>%
dplyr::mutate(open = dplyr::case_when(cod_bag > 0 ~ 1, TRUE ~ 0)) %>%
dplyr::filter(open == select_season) %>%
dplyr::select(!open) %>%
dplyr::mutate(#period1 = paste0(as.numeric(month), "-", as.numeric(stringr::str_extract(day, "^.{2}")), "-", mode),
period2 = paste0(month, "-", stringr::str_extract(day, "^.{2}"), "-", mode),
day = as.numeric(stringr::str_extract(day, "^.{2}")),
month = as.numeric(month)) %>%
dplyr::select(c(period2, month, day, mode))
set.seed(eff_seed)
# Input the calibration output which contains the number of choice occasions needed to simulate
calibration_data <- calibration_data_table %>% tibble::tibble()
cod_size_data <- size_data_read %>% dplyr::filter(species == "cod", season == seas)
had_size_data <- size_data_read %>% dplyr::filter(species == "hadd", season == seas)
######################################
##   Begin simulating trip outcomes ##
######################################
print("into directed trips")
# Set up an output file for the separately simulated within-season regulatory periods
directed_trips_p <- directed_trips_table %>%
tibble::tibble() %>%
dplyr::filter(draw == x) %>%
dplyr::mutate(open = dplyr::case_when(cod_bag > 0 ~ 1, TRUE ~ 0))%>%
dplyr::mutate(period2 = paste0(month, "-", stringr::str_extract(day, "^.{2}"), "-", mode),
n_trips = floor(dtrip),
n_draws = n_drawz) %>%
dplyr::filter(open == select_season) %>%
dplyr::select(!open)
open<- directed_trips_table %>%
tibble::tibble() %>%
dplyr::filter(draw == x) %>%
dplyr::mutate(open = dplyr::case_when(cod_bag > 0 ~ 1, TRUE ~ 0))%>%
dplyr::mutate(day = stringr::str_extract(day, '\\d{2}'),
period2 = paste0(month, "_", day, "_", mode)) %>%
dplyr::select(period2, open) %>%
dplyr::filter(open == select_season) %>%
dplyr::select(!open)
print("first kod")
period_vec <- directed_trips_p %>%
dplyr::select(period2, n_draws, month, kod) %>%
tidyr::uncount(n_draws) # %>% mutate(sample_id=1:nrow(period_vec))
regs <- tibble::tibble(directed_trips_p) %>%
dplyr::select(period2,
cod_bag, cod_min,
hadd_bag, hadd_min) %>%
dplyr::left_join(period_conversion, by = c("period2")) %>%
dplyr::group_by(period2) %>%
dplyr::slice(1) %>%
dplyr::mutate(day = as.character(day),
period2 = paste0(month, "_", day, "_", mode))
#For Kim: Here is where we need to add import 2024 catch-per-trip files. For testing, I used the catch-per trip
#contained in the costs_new_all files
cod_catch_data <-  catch_data_all%>%
dplyr::mutate(month = stringr::str_sub(day, 3, 5),
month = dplyr::recode(month, jan = 1, feb = 2, mar = 3, apr = 4,
may = 5, jun = 6, jul = 7, aug = 8,
sep = 9, oct = 10, nov = 11, dec = 12),
day = as.numeric(stringr::str_extract(day, '\\d{2}')) ,
period2 = paste0(month, "_", day, "_", mode))
cod_catch_data <- cod_catch_data %>%
dplyr::filter(period2 %in% c(unique(open$period2))) %>%
dplyr::group_by(period2) %>%
dplyr::slice_sample(n = n_drawz*n_catch_draws, replace = TRUE)   %>%
dplyr::mutate(#period = rep(period_vec$period2, each = nsamp),
catch_draw = rep(1:n_catch_draws, length.out = n_drawz*n_catch_draws),
tripid = rep(1:n_drawz, each=n_catch_draws)) %>%
dplyr::ungroup()
print("postmutate")
cod_had_catch_data <- cod_catch_data
# subset trips with zero catch, as no size draws are required
cod_zero_catch <- dplyr::filter(cod_catch_data, cod_catch == 0) %>%
dplyr::select(!mode)
#Check to see if there is no catch for either species and if so, pipe code around keep/release determination
cod_catch_check<-base::sum(cod_catch_data$cod_catch)
had_catch_check<-base::sum(cod_catch_data$hadd_catch)
if (cod_catch_check!=0){
#remove trips with zero summer flounder catch
cod_catch_data <- dplyr::filter(cod_catch_data, cod_catch > 0)
##Private catch at length
cod_catch_data_pr<- cod_catch_data %>% dplyr::filter(mode=="pr")
row_inds <- seq_len(nrow(cod_catch_data_pr))
cod_catch_data_pr<-cod_catch_data_pr %>%
dplyr::slice(rep(row_inds,cod_catch))   %>%
dplyr::mutate(fishid=dplyr::row_number())
# generate lengths for each fish
cod_size_data_pr<-cod_size_data %>% dplyr::filter(mode=="pr")
catch_size_data_pr <- cod_catch_data_pr %>%
dplyr::mutate(fitted_length = sample(cod_size_data_pr$length,
nrow(.),
prob = cod_size_data_pr$f_l,
replace = TRUE)) #%>%    dplyr::arrange(period2, tripid, catch_draw)
##shore catch at length
cod_catch_data_sh<- cod_catch_data %>% dplyr::filter(mode=="sh")
row_inds <- seq_len(nrow(cod_catch_data_sh))
cod_catch_data_sh<-cod_catch_data_sh %>%
dplyr::slice(rep(row_inds,cod_catch))   %>%
dplyr::mutate(fishid=dplyr::row_number())
# generate lengths for each fish
cod_size_data_sh<-cod_size_data %>% dplyr::filter(mode=="sh")
catch_size_data_sh <- cod_catch_data_sh %>%
dplyr::mutate(fitted_length = sample(cod_size_data_sh$length,
nrow(.),
prob = cod_size_data_sh$f_l,
replace = TRUE)) #%>%    dplyr::arrange(period2, tripid, catch_draw)
##fh catch at length
cod_catch_data_fh<- cod_catch_data %>% dplyr::filter(mode=="fh")
row_inds <- seq_len(nrow(cod_catch_data_fh))
cod_catch_data_fh<-cod_catch_data_fh %>%
dplyr::slice(rep(row_inds,cod_catch))   %>%
dplyr::mutate(fishid=dplyr::row_number())
# generate lengths for each fish
cod_size_data_fh<-cod_size_data %>% dplyr::filter(mode=="fh")
catch_size_data_fh <- cod_catch_data_fh %>%
dplyr::mutate(fitted_length = sample(cod_size_data_fh$length,
nrow(.),
prob = cod_size_data_fh$fitted_prob,
replace = TRUE))
catch_size_data <- rbind(catch_size_data_fh, catch_size_data_pr, catch_size_data_sh)
# Impose regulations, calculate keep and release per trip
# For summer flounder, retain keep- and release-at-length
####### Start Here #################
############# Length #####################################
catch_size_data <- catch_size_data %>%
dplyr::left_join(regs, by = c("period2", "month", "mode")) %>%
dplyr::select(!day.x) %>%
dplyr::rename(day = day.y) %>%
dplyr::mutate(posskeep = ifelse(fitted_length>=cod_min ,1,0)) %>%
dplyr::group_by(tripid, period2, catch_draw) %>%
# keep = case_when(
# fitted_length>=minsize & fitted_length<=maxsize ~ 1,
# TRUE ~ 0),
dplyr::mutate(csum_keep = cumsum(posskeep)) %>%
dplyr::ungroup() %>%
dplyr::mutate(
keep_adj = dplyr::case_when(
cod_bag > 0 ~ ifelse(csum_keep<=cod_bag & posskeep==1,1,0),
TRUE ~ 0))
catch_size_data <- catch_size_data %>%
dplyr::mutate_if(is.numeric, tidyr::replace_na, replace = 0)
catch_size_data <- catch_size_data %>%
dplyr::mutate(keep_tot = keep_adj,
release = ifelse(keep_adj==0,1,0))
catch_size_data<- catch_size_data %>%
dplyr::select(fishid, fitted_length, tripid, keep_tot, release, period2, catch_draw, mode,
cod_keep, cod_rel, hadd_keep, hadd_rel)  %>%
dplyr::rename(keep = keep_tot,
mode1=mode)
new_size_data <- catch_size_data %>%
dplyr::group_by(period2, catch_draw, tripid, fitted_length) %>%
dplyr::summarize(keep = sum(keep),
release = sum(release), .groups = "drop") %>%
dplyr::ungroup()
summed_catch_data <- new_size_data %>%
dplyr::group_by(period2, catch_draw, tripid) %>%
dplyr::summarize(tot_keep_cod_new = sum(keep),
tot_rel_cod_new = sum(release),
.groups = "drop") %>%
dplyr::ungroup()
keep_size_data <- new_size_data %>%
dplyr::select(-release) %>%
tidyr::pivot_wider(names_from = fitted_length, #_length,
names_glue = "keep_cod_{fitted_length}",
names_sort = TRUE,
values_from = keep,
values_fill = 0)
release_size_data <- new_size_data %>%
dplyr::select(-keep) %>%
tidyr::pivot_wider(names_from = fitted_length, #_length,
names_glue = "release_cod_{fitted_length}",
names_sort = TRUE,
values_from = release,
values_fill = 0)
keep_release_cod <- keep_size_data %>%
dplyr::left_join(release_size_data, by = c("period2",  "tripid", "catch_draw"))
trip_data <- summed_catch_data
cod_zero_catch<-cod_zero_catch %>%
dplyr::select(tripid, catch_draw, period2) %>%
dplyr::mutate(tot_keep_cod_new=0,
tot_rel_cod_new=0)
trip_data <- dplyr::bind_rows(trip_data, cod_zero_catch) %>%
dplyr::mutate_if(is.numeric, tidyr::replace_na, replace = 0) %>%
dplyr::select(c("period2", "catch_draw","tripid",
"tot_keep_cod_new","tot_rel_cod_new"))
trip_data<- trip_data %>% dplyr::mutate(domain2 = paste0(period2, "_", catch_draw, "_", tripid))
trip_data<-data.table::as.data.table(trip_data)
data.table::setkey(trip_data, "domain2")
}
View(trip_data)
if (had_catch_check!=0){
#Testing with Scup code
had_zero_catch <- dplyr::filter(cod_had_catch_data, hadd_catch == 0) %>%
dplyr::select(-c("cod_catch"))
#remove trips with zero summer flounder catch
had_catch_data <- dplyr::filter(cod_had_catch_data, hadd_catch > 0)
##Private catch at length
had_catch_data_pr<- had_catch_data %>% dplyr::filter(mode=="pr")
row_inds <- seq_len(nrow(had_catch_data_pr))
had_catch_data_pr<-had_catch_data_pr %>%
dplyr::slice(rep(row_inds,hadd_catch))   %>%
dplyr::mutate(fishid=dplyr::row_number())
# generate lengths for each fish
had_size_data_pr<-had_size_data %>% dplyr::filter(mode=="pr")
catch_size_data_pr <- had_catch_data_pr %>%
dplyr::mutate(fitted_length = sample(had_size_data_pr$length,
nrow(.),
prob = had_size_data_pr$f_l,
replace = TRUE))
##shore catch at length
had_catch_data_sh<- had_catch_data %>% dplyr::filter(mode=="sh")
row_inds <- seq_len(nrow(had_catch_data_sh))
had_catch_data_sh<-had_catch_data_sh %>%
dplyr::slice(rep(row_inds,hadd_catch))   %>%
dplyr::mutate(fishid=dplyr::row_number())
# generate lengths for each fish
had_size_data_sh<-had_size_data %>% dplyr::filter(mode=="sh")
catch_size_data_sh <- had_catch_data_sh %>%
dplyr::mutate(fitted_length = sample(had_size_data_sh$length,
nrow(.),
prob = had_size_data_sh$f_l,
replace = TRUE)) #%>%    dplyr::arrange(period2, tripid, catch_draw)
##fh catch at length
had_catch_data_fh<- had_catch_data %>% dplyr::filter(mode=="fh")
row_inds <- seq_len(nrow(had_catch_data_fh))
had_catch_data_fh<-had_catch_data_fh %>%
dplyr::slice(rep(row_inds,hadd_catch))   %>%
dplyr::mutate(fishid=dplyr::row_number())
# generate lengths for each fish
had_size_data_fh<-had_size_data %>% dplyr::filter(mode=="fh")
catch_size_data_fh <- had_catch_data_fh %>%
dplyr::mutate(fitted_length = sample(had_size_data_fh$length,
nrow(.),
prob = had_size_data_fh$f_l,
replace = TRUE)) #%>%    dplyr::arrange(period2, tripid, catch_draw)
catch_size_data <- rbind(catch_size_data_fh, catch_size_data_pr, catch_size_data_sh)
catch_size_data <- catch_size_data %>%
dplyr::left_join(regs, by = c("period2", "month", "mode")) %>%
dplyr::select(!day.x) %>%
dplyr::rename(day = day.y) %>%
dplyr::mutate(posskeep = ifelse(fitted_length>=as.numeric(hadd_min) ,1,0)) %>%
dplyr::group_by(tripid, period2, catch_draw) %>%
# keep = case_when(
# fitted_length>=minsize & fitted_length<=maxsize ~ 1,
# TRUE ~ 0),
dplyr::mutate(csum_keep = cumsum(posskeep)) %>%
dplyr::ungroup() %>%
dplyr::mutate(
keep_adj = dplyr::case_when(
hadd_bag > 0 ~ ifelse(csum_keep<=hadd_bag & posskeep==1,1,0),
TRUE ~ 0))
#catch_size_data[is.na(catch_size_data)] <- 0
catch_size_data <- catch_size_data %>%
dplyr::mutate_if(is.numeric, tidyr::replace_na, replace = 0)
catch_size_data <- catch_size_data %>%
dplyr::mutate(keep_tot = keep_adj,
release = ifelse(keep_adj==0,1,0))
catch_size_data<- catch_size_data %>%
dplyr::select(fishid, fitted_length, tripid, keep_tot, release, period2, catch_draw, mode,
cod_keep, cod_rel, hadd_keep, hadd_rel)  %>%
dplyr::rename(keep = keep_tot,
mode1=mode)
new_size_data <- catch_size_data %>%
dplyr::group_by(period2, catch_draw, tripid, fitted_length) %>%
dplyr::summarize(keep = sum(keep),
release = sum(release), .groups = "drop") %>%
dplyr::ungroup()
summed_catch_data <- new_size_data %>%
dplyr::group_by(period2, catch_draw, tripid) %>%
dplyr::summarize(tot_keep_had_new = sum(keep),
tot_rel_had_new = sum(release),
.groups = "drop") %>%
dplyr::ungroup()
keep_size_data <- new_size_data %>%
dplyr::select(-release) %>%
tidyr::pivot_wider(names_from = fitted_length, #_length,
names_glue = "keep_had_{fitted_length}",
names_sort = TRUE,
values_from = keep,
values_fill = 0)
release_size_data <- new_size_data %>%
dplyr::select(-keep) %>%
tidyr::pivot_wider(names_from = fitted_length, #_length,
names_glue = "release_had_{fitted_length}",
names_sort = TRUE,
values_from = release,
values_fill = 0)
keep_release_had <- keep_size_data %>%
dplyr::left_join(release_size_data, by = c("period2",  "tripid", "catch_draw"))
trip_data_had <- summed_catch_data
had_zero_catch<-had_zero_catch %>%
dplyr::select(tripid, catch_draw, period2) %>%
dplyr::mutate(tot_keep_had_new=0,
tot_rel_had_new=0)
trip_data_had <- dplyr::bind_rows(trip_data_had, had_zero_catch) %>%
dplyr::mutate_if(is.numeric, tidyr::replace_na, replace = 0) %>%
dplyr::select(c("period2", "catch_draw","tripid",
"tot_keep_had_new","tot_rel_had_new"))
trip_data_had<- trip_data_had %>% dplyr::mutate(domain2 = paste0(period2, "_", catch_draw, "_", tripid))
trip_data_had<-data.table::as.data.table(trip_data_had)
data.table::setkey(trip_data_had, "domain2")
trip_data<-trip_data[trip_data_had, on = "domain2"]
trip_data<-trip_data %>% dplyr::select(-i.tripid, -i.catch_draw, -i.period2)
}
length_data <- keep_release_cod %>%
dplyr::full_join(keep_release_had, by = c("period2","tripid", "catch_draw"))
# length_data <- keep_release_cod %>%
#   dplyr::full_join(keep_release_had, by = c("period2","tripid", "catch_draw")) %>%
#   dplyr::full_join(keep_release_scup, by = c("period2","tripid", "catch_draw"))
length_data[is.na(length_data)] <- 0
length_data<-length_data %>% dplyr::arrange(period2,tripid, catch_draw)
zero_catch_check <- cod_zero_catch %>%  dplyr::left_join(had_zero_catch) %>%
dplyr::filter(tot_keep_cod_new==0 & tot_rel_cod_new==0 &
tot_keep_had_new==0 & tot_rel_had_new==0) %>%
dplyr::select("period2","tripid", "catch_draw")
length_data<- plyr::rbind.fill(length_data, zero_catch_check)
length_data<-length_data %>% dplyr::arrange(period2,tripid, catch_draw)
length_data[is.na(length_data)] <- 0
costs_new_all2 <- data.frame(costs_new_all) %>% #tibble() %>%
#dplyr::mutate_at(.vars = "period2", .funs = gsub,
#                 pattern = "-", replace = "_") %>%
dplyr::rename(beta_sqrt_cod_keep_base=beta_sqrt_cod_keep,
beta_sqrt_cod_release_base=beta_sqrt_cod_release,
beta_sqrt_hadd_keep_base=beta_sqrt_hadd_keep,
beta_sqrt_hadd_release_base=beta_sqrt_hadd_release,
beta_sqrt_cod_hadd_keep_base=beta_sqrt_cod_hadd_keep,
beta_cost_base = beta_cost,
beta_opt_out_base=beta_opt_out,
beta_opt_out_age_base=beta_opt_out_age,
beta_opt_out_likely_base = beta_opt_out_likely,
beta_opt_out_prefer_base = beta_opt_out_prefer)
costs_new_all
calib_compare = readr::read_rds("C:/Users/kimberly.bastille/Desktop/codhad_data/calibration_comparison.rds")
View(calib_compare)
summar<- calib_compare %>%
dplyr::group_by(draw) %>%
dplyr::summarise(length(draw))
View(summar)
cost
mean(summar$`length(draw)`)
578/5.6
